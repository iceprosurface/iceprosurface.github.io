<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | icepro`s Blog]]></title>
  <link href="http://iceprosurface.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://iceprosurface.com/"/>
  <updated>2016-03-18T15:03:26+08:00</updated>
  <id>http://iceprosurface.com/</id>
  <author>
    <name><![CDATA[icepro]]></name>
    <email><![CDATA[iceprosurface@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Lrc Cont]]></title>
    <link href="http://iceprosurface.com/blog/2016/03/18/lrc-cont/"/>
    <updated>2016-03-18T14:55:41+08:00</updated>
    <id>http://iceprosurface.com/blog/2016/03/18/lrc-cont</id>
    <content type="html"><![CDATA[<blockquote><p>本例用于在lrc控制模块，在用于在timeupdate时间中同步更新lrc使用。</p></blockquote>

<p>这里首先放置一个歌词解析模块，下面还需要做一个filter做歌词时间格式化模块
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">/&lt;em&gt;&lt;em&gt;</span>
</span><span class='line'><span class="o">*</span> <span class="err">歌词解析模块</span>
</span><span class='line'><span class="o">*</span>
</span><span class='line'><span class="o">*</span> <span class="err">重复类歌词将</span><span class="nx">repeat</span><span class="err">至</span><span class="nx">array</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">author</span> <span class="nx">icepro</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">Time</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">3</span><span class="o">-</span><span class="mi">16</span> <span class="mi">17</span><span class="o">:</span><span class="mi">46</span><span class="o">:</span><span class="mi">11</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/em&gt;/</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">lrcParser</span><span class="p">(</span><span class="nx">lrc</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// 正则表达式用于已匹配[00:00:00][00:00][00:00.00]</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">reg</span> <span class="o">=</span> <span class="err">/([\d{2}[:]\d{2}([.|:]\d{2}){0,1}])+(.&lt;/em&gt;)[\n|\r|\r\n]/g;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">res</span> <span class="o">=</span> <span class="nx">lrc</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">reg</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// 用来push入歌词</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">stack</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">();</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">res</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i1</span><span class="p">,</span><span class="nx">item1</span><span class="p">){</span>
</span><span class='line'>            <span class="c1">// 获取时间</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">timeStmp</span> <span class="o">=</span> <span class="nx">item1</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[\d{2}[:]\d{2}([.|:]\d{2}){0,1}]/g</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// 获取歌词，将时间和换行符去除</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">song</span> <span class="o">=</span> <span class="nx">item1</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\d{2}[:]\d{2}([.|:]\d{2}){0,1}]/g</span><span class="p">,</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\n|\r|\r\n]/g</span><span class="p">,</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;);</span>
</span><span class='line'>            <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">timeStmp</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i2</span><span class="p">,</span><span class="nx">item2</span><span class="p">){</span>
</span><span class='line'>                <span class="nx">stack</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">song</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span><span class="nx">song</span><span class="p">,</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">time</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">:</span><span class="nx">item2</span><span class="p">});</span>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 依照时间排序</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">stack</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span> <span class="nx">compare</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">localeCompare</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">time</span><span class="p">);});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<!--more-->


<p>下面放置一个歌词控制器模块。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">/&lt;em&gt;&lt;em&gt;</span>
</span><span class='line'><span class="o">*</span> <span class="err">歌词控制器</span>
</span><span class='line'><span class="o">*</span>
</span><span class='line'><span class="o">*</span> <span class="err">我认为在歌词控制中</span><span class="p">,</span><span class="err">不停循环遍历数组当然是可以的</span><span class="p">,</span><span class="err">不过这样显然太过浪费性能了</span>
</span><span class='line'><span class="o">*</span> <span class="err">事实上我们只需要在重定位的时候遍历一遍数组获得新的</span><span class="nx">index</span><span class="err">就好了，判断总比循环节省时间吧</span>
</span><span class='line'><span class="o">*</span> <span class="err">以下方法麻烦了点</span><span class="p">,</span><span class="err">但是基于这个思路制作</span><span class="nx">lrc</span><span class="err">控制器也是可以的</span>
</span><span class='line'><span class="o">*</span> <span class="err">当然咯改成遍历肯定要灵活一些，个人习惯不同</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">author</span> <span class="nx">icepro</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">Time</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">3</span><span class="o">-</span><span class="mi">10</span> <span class="mi">11</span><span class="o">:</span><span class="mi">13</span><span class="o">:</span><span class="mi">55</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/em&gt;/</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">lrcControl</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">lrcs</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">nowPlay</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="err">/&lt;/em&gt; 其中offset偏移时间和动画速率speed还未列入需求 */</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ini</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">lrcs</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(),</span>
</span><span class='line'>        <span class="nx">nowPlay</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">offset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 设置lrc,lrc格式必须为数组[{song:XXXX,time:[00:00.00]}]格式,判断也是</span>
</span><span class='line'>    <span class="c1">// 如此，所以传入前必须先通过一个解释器统一格式</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">setLrc</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">lrc</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">lrcs</span> <span class="o">=</span> <span class="nx">lrc</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 获得所有的lrc,输出的lrc是经过排序的</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">getAllLrc</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">lrcs</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 判断是否需要播放下一节</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">canPlayNext</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">nowtime</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">nowtime</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;[</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span><span class="o">+</span><span class="nx">nowtime</span><span class="o">+&amp;</span><span class="nx">ldquo</span><span class="p">;]</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;;</span>
</span><span class='line'>        <span class="c1">// console.log(nowtime+&amp;ldquo;:&amp;rdquo;+lrcs[nowPlay].time);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">nowtime</span><span class="p">.</span><span class="nx">localeCompare</span><span class="p">(</span><span class="nx">lrcs</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">nowPlay</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">amp</span><span class="p">;</span><span class="nx">lrcs</span><span class="p">[</span><span class="nx">nowPlay</span><span class="p">].</span><span class="nx">time</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">nowPlay</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">lrcs</span><span class="p">[</span><span class="nx">nowPlay</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">song</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="c1">// 获得现在播放的index次序,在angular下不对数组后续操作重排的话直接可以使用$index即可替换class</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getThisPlay</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">nowPlay</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 重新计算lrc位置</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">reCalculate</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">nowtime</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">nowtime</span> <span class="o">=</span> <span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">nowtime</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">lrcs</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">item</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="nx">nowtime</span><span class="p">.</span><span class="nx">localeCompare</span><span class="p">(</span><span class="nx">item</span><span class="p">.</span><span class="nx">time</span><span class="p">)</span><span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="k">return</span> <span class="p">(</span><span class="nx">nowPlay</span> <span class="o">=</span> <span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">setLrc</span><span class="o">:</span><span class="nx">setLrc</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">reCalculate</span><span class="o">:</span><span class="nx">reCalculate</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getThisPlay</span><span class="o">:</span><span class="nx">getThisPlay</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getAllLrc</span><span class="o">:</span><span class="nx">getAllLrc</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">canPlayNext</span><span class="o">:</span><span class="nx">canPlayNext</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Js]media的使用]]></title>
    <link href="http://iceprosurface.com/blog/2016/03/15/media-control/"/>
    <updated>2016-03-15T22:34:40+08:00</updated>
    <id>http://iceprosurface.com/blog/2016/03/15/media-control</id>
    <content type="html"><![CDATA[<blockquote><p>这是一个关于media的播放器模块化控制，用于个人iceplayer播放器</p></blockquote>

<p>花了一定的时间解决了之前碰到的关于播放器的问题，目前在开发一个html5播放器，基于bootstrap metro UI css 和angularjs，此模块是在angular控制器中用于控制音乐播放的模块，开头的方法列表并没完全写入所有的方法，在下面可以自己增加或删除，在这里面的lrc仅限读取和设置，lrc的实时播放将会被列入一个单独的模块。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">/&lt;em&gt;*</span>
</span><span class='line'><span class="o">*</span> <span class="nx">media</span><span class="err">控制器</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">author</span> <span class="nx">icepro</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="nx">Time</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">3</span><span class="o">-</span><span class="mi">10</span> <span class="mi">11</span><span class="o">:</span><span class="mi">13</span><span class="o">:</span><span class="mi">55</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">setMedia</span>              <span class="err">设置</span><span class="nx">media</span><span class="err">元素</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">playList</span>              <span class="err">播放列表</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">className</span>             <span class="err">类名</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">play</span>                  <span class="err">播放</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">pause</span>                 <span class="err">暂停</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">setSrc</span>                <span class="err">设置文件路径</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">getSrc</span>                <span class="err">获得文件路径</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">newMusic</span>              <span class="err">依照</span><span class="nx">url</span><span class="err">开始新音乐</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">setMedia</span>              <span class="err">设置</span><span class="nx">media</span><span class="err">元素</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">getMedia</span>              <span class="err">获取</span><span class="nx">media</span><span class="err">元素</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">playNext</span>              <span class="err">播放下一首</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">setCurrentTime</span>        <span class="err">设置当前播放时间</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">getCurrentTime</span>        <span class="err">获得当前播放时间</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">getDuration</span>           <span class="err">获得歌曲完整长度</span>
</span><span class='line'><span class="o">*</span> <span class="err">@</span><span class="k">return</span> <span class="nx">setLrc</span>                <span class="err">设置当前歌词的</span><span class="nx">lrc</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/em&gt;/</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">mediaContol</span><span class="p">(){</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="c1">// 生成一个audio</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">media</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Audio</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">indexOfList</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">played</span> <span class="o">=</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">playing</span> <span class="o">=</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">playList</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(),</span>
</span><span class='line'>    <span class="nx">className</span> <span class="o">=</span> <span class="s2">&quot;mediaControl&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">theNext</span> <span class="o">=</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">bt_play</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">duration</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">currentTime</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">lrc</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 特殊情况下需要返回自己</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getMediaContol</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获取media元素</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getMedia</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">media</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 播放</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">play</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playList</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;no music loaded&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span><span class="p">((</span><span class="o">!</span><span class="nx">media</span><span class="p">.</span><span class="nx">paused</span><span class="p">)</span><span class="o">|</span><span class="p">(</span><span class="o">!</span><span class="nx">played</span><span class="p">)</span><span class="o">|</span><span class="nx">theNext</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">setSrc</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playList</span><span class="p">[</span><span class="nx">indexOfList</span><span class="p">]);</span>
</span><span class='line'>        <span class="nx">theNext</span> <span class="o">=</span> <span class="o">!</span><span class="nx">theNext</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// 设置当前播放状态</span>
</span><span class='line'>    <span class="nx">playing</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 设置是否已经加载过src</span>
</span><span class='line'>    <span class="nx">played</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">// 设置按钮为pause</span>
</span><span class='line'>    <span class="nx">bt_play</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">media</span><span class="p">.</span><span class="nx">play</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 暂停</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">pause</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">bt_play</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">media</span><span class="p">.</span><span class="nx">pause</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获得当前播放按钮是否为play</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getBt_play</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">bt_play</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获得是否为播放状态</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">isPlaying</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">playing</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置歌曲完整长度</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">setDuration</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">duration</span> <span class="o">=</span> <span class="nx">media</span><span class="p">.</span><span class="nx">duration</span> <span class="o">==</span> <span class="kc">NaN</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span><span class="nx">media</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获得歌曲完整长度</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getDuration</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">duration</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获取当前时间</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getCurrentTime</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">media</span><span class="p">.</span><span class="nx">currentTime</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置当前时间</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">setCurrentTime</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">time</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">media</span><span class="p">.</span><span class="nx">currentTime</span> <span class="o">=</span> <span class="nx">time</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 以百分比获取当前时间</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getCurrentTimeByPercent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">media</span><span class="p">.</span><span class="nx">currentTime</span> <span class="o">/</span> <span class="nx">media</span><span class="p">.</span><span class="nx">duration</span> <span class="o">*</span> <span class="mi">10000</span><span class="p">)</span> <span class="o">/</span> <span class="mf">100.00</span> <span class="o">+</span> <span class="s2">&quot;%&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 停止</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">stop</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">// 设置当前播放状态</span>
</span><span class='line'>    <span class="nx">playing</span> <span class="o">=</span> <span class="kc">false</span> <span class="p">;</span>
</span><span class='line'>    <span class="nx">media</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置播放</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">setSrc</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">media</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 获得播放</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getSrc</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">media</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 开始新曲目</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">newMusic</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">indexOfList</span><span class="o">=</span> <span class="nx">index</span> <span class="o">&amp;</span><span class="nx">gt</span><span class="p">;</span> <span class="k">this</span><span class="p">.</span><span class="nx">playList</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="nx">index</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">theNext</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">play</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 下一首</span>
</span><span class='line'> <span class="kd">var</span> <span class="nx">playNext</span> <span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playList</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">indexOfList</span> <span class="o">=</span> <span class="p">(</span><span class="nx">indexOfList</span> <span class="o">==</span> <span class="k">this</span><span class="p">.</span><span class="nx">playList</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">indexOfList</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">theNext</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="k">this</span><span class="p">.</span><span class="nx">play</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;no music loaded&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 设置当前歌词的lrc</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">setLrc</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">lrcs</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">lrc</span> <span class="o">=</span> <span class="nx">lrcs</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">isPlaying</span><span class="o">:</span><span class="nx">isPlaying</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">indexOfList</span><span class="o">:</span><span class="nx">indexOfList</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">stop</span><span class="o">:</span><span class="nx">stop</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getBt_play</span><span class="o">:</span><span class="nx">getBt_play</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">playList</span><span class="o">:</span><span class="nx">playList</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">className</span><span class="o">:</span><span class="nx">className</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">play</span><span class="o">:</span><span class="nx">play</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">pause</span><span class="o">:</span><span class="nx">pause</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">setSrc</span><span class="o">:</span><span class="nx">setSrc</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getSrc</span><span class="o">:</span><span class="nx">getSrc</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">newMusic</span><span class="o">:</span><span class="nx">newMusic</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getMedia</span><span class="o">:</span><span class="nx">getMedia</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">playNext</span><span class="o">:</span><span class="nx">playNext</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">setCurrentTime</span><span class="o">:</span><span class="nx">setCurrentTime</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getCurrentTime</span><span class="o">:</span><span class="nx">getCurrentTime</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">setDuration</span><span class="o">:</span><span class="nx">setDuration</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getDuration</span><span class="o">:</span><span class="nx">getDuration</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">getCurrentTimeByPercent</span><span class="o">:</span><span class="nx">getCurrentTimeByPercent</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">setLrc</span><span class="o">:</span><span class="nx">setLrc</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Javascript]原型方法，对象方法和类方法的个人整理]]></title>
    <link href="http://iceprosurface.com/blog/2016/03/02/js-iife/"/>
    <updated>2016-03-02T14:54:51+08:00</updated>
    <id>http://iceprosurface.com/blog/2016/03/02/js-iife</id>
    <content type="html"><![CDATA[<blockquote><p>本文受<a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html">阮一峰Javascript模块化编程</a> 启发</p>

<p>本文受<a href="http://www.cnblogs.com/yunfour/p/3946444.html">js中使用使用原型（prototype）定义方法的好处</a> 启发</p>

<p>本文受<a href="http://www.cnblogs.com/TomXu/archive/2011/12/31/2289423.html">深入理解JavaScript系列（4）：立即调用的函数表达式</a> 启发</p></blockquote>

<h1>函数的基本声明方法</h1>

<p>首先记录一下常见的几种函数声明方法</p>

<ul>
<li>函数声明 function fname(){}</li>
<li>函数表达式声明 var fname = function(){}</li>
<li>匿名表达式 function(){}</li>
</ul>


<h2>关于立即执行函数的解析</h2>

<p> 在js中，使用一个函数通常使用fname();的方式来执行函数表达式,但是假如我们用的不是函数声明而是表达式声明的话,我们会发现有趣的一点：基于这一点我们可以在声明完函数后立即使用函数，这种函数被称为立即执行函数比如：</p>

<p> 你会发现所谓的fname()中的fname就是function的引用，那么我们为什么不直接在后面加上()让他执行呢？基于这一点我们可以在声明完函数后立即使用函数，这种函数被称为立即执行函数比如：</p>

<blockquote><ul>
<li>(function(){})();</li>
<li>(function(){}());</li>
</ul>
</blockquote>

<p> 这两种形式通过()操作让解释器认为这个function是一个函数表达式，也就可以声明一个立即执行函数，同样的只要是对函数表达式声明进行操作的运算符都可以触发这个效果，所以同理~/！/-/+也同样可以触发该项操作比如</p>

<blockquote><ul>
<li>-function(){}();</li>
<li>+function(){}();</li>
<li>~function(){}();</li>
<li>!function(){}();</li>
</ul>
</blockquote>

<p> 如果你不嫌麻烦完全可以用上面那些方法声明一个表达式，但是显然这不是阅读良好的程序，因为你必须吧框框拉倒最后去看看有没有一个()</p>

<p> 所以在诸如jquery等常见的类库都是用了()来执行，目的是防止阅读障碍。这个解析主要是后面整理的前置知识。</p>

<h1>对象方法</h1>

<p> 对象方法可以这么理解：如果类生成一个实例，那么该实例就能使用该方法</p>

<p> 比如下面这个例子：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'> <span class="kd">var</span> <span class="nx">module1</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">({</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="err">　　　　</span><span class="nx">_count</span> <span class="o">:</span> <span class="mi">0</span><span class="p">,</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="err">　　　　</span><span class="nx">m1</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">(){</span>
</span><span class='line'><span class="err">　　　　　　</span><span class="c1">//&amp;hellip;</span>
</span><span class='line'><span class="err">　　　　</span><span class="p">},</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="err">　　　　</span><span class="nx">m2</span> <span class="o">:</span> <span class="kd">function</span> <span class="p">(){</span>
</span><span class='line'><span class="err">　　　　　　</span><span class="c1">//&amp;hellip;</span>
</span><span class='line'><span class="err">　　　　</span><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="err">　　</span><span class="p">});</span>
</span><span class='line'><span class="nx">module1</span><span class="p">.</span><span class="nx">m1</span><span class="p">();</span>
</span><span class='line'><span class="nx">module1</span><span class="p">.</span><span class="nx">m2</span><span class="p">();</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>  上面的函数m1()和m2()，都封装在module1对象里。使用的时候，就是调用这个对象的属性。</p>

<h1>类方法</h1>

<p>类方法简单的讲：不需要通过生成实例就可以使用的方法</p>

<p>比如下面这个例子：</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">fname</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>    <span class="c1">// private</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">className</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">fname</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;;</span>
</span><span class='line'>    <span class="c1">// public</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">hello</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 类方法</span>
</span><span class='line'><span class="nx">fname</span><span class="p">.</span><span class="nx">Run</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
</span><span class='line'><span class="c1">// 类方法的使用</span>
</span><span class='line'><span class="nx">fname</span><span class="p">.</span><span class="nx">Run</span><span class="p">();</span>
</span><span class='line'><span class="nx">fname</span><span class="p">.</span><span class="nx">hello</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>上面的函数Run()和hello()，都封装在fname类里。使用的时候，不需要生成一个实例就可以直接使用。</p>

<h1>原型方法</h1>

<p>原型方法简单的将就是：主要是用来对已有的对象进行扩展，例如Array数组没有什么方法，你可以为其增加原型方法，那么创建的数组就拥有了该方法。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">fname</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sayName</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">fname1</span><span class="o">=</span><span class="k">new</span> <span class="nx">fname</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">fname1</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;);</span>
</span><span class='line'><span class="nx">fname1</span><span class="p">.</span><span class="nx">sayName</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>假设说我已经通过一个类生成了一堆对象，那么现在我需要对某个方法进行补充那么就可以通过这个原型方法为这些方法补充原型方法。</p>

<p>除此以外，原型方法本质上是一种指针，指向的是对应的prototype对象，不需要对每一个方法扩展内存，所以许多前端工程师都推荐使用原型方法来命名以减少内存消耗。</p>
]]></content>
  </entry>
  
</feed>
